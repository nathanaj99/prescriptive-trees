{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20460\viewh15340\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 I generate the data through following sections:\
\
 \
Section 1\
  In this section we generate synthetic data in the following fashion:\
    1- We pick a seed number\
    2- we generate the data with n= N_train + N_test data-points\
        # x_ij ~ N(0,1) if \
        # j \\in \{1,2\}\
    3- y_0(x) = baseline(x) - 0.5 effect(x) #This is the true outcome under treatment 0\
    4- y_1(x) = baseline(x) + 0.5 effect(x) #This is the true outcome under treatment 1\
    5- We have a threshold between 0 and 1. For each person we generate a uniformly random number between 0 and 1. If that random number was <= the threshold then that person would\
        receive the best treatment suited for that person otherwise he/she get no treatment.\
    6- so if the person receives the best treatment t then (P(t|x)= threshold) otherwise  P(t|x)=1- threshold\
    7- We add noise eps_i ~ N(mean = 0  , sd = 0.1) to the outcomes\
\
\
Section 2\
  For the training data, we fit a logistic regression model to learn the propensity scpre P(t=1|x) for each entry; we fit the model only on the training data. The true propensity score  is explained in item 7 in section 1\
we use the propensity score to predict  prob_t P(t|x) for each  datapoint.  \
\
prob_t  = prop_score*t + (1-t)* (1- prop_score)\
\
 Column  prob_t shows the predicted P(t | x)\
\
\
\
Section 3 \
We scale y0 and y1 to [0,1]\
\
\
\
\
\
\
Section 4\
  \
  In this section we categorize the continues columns which are derived from standard normal distribution:\
    (q_25 = qnrom(0.25,mean=0,sd=1) )\
    1- first for each column x we create 10 binary columns x_1, x_2, x_3,\'85,x_10\
    if x <= q_0.1 then x_1 = x_2 = x_3 = x_4 = \'85=x_10=1\
    else x <= q_0.2 then x_2 = x_3 = x_4 = \'85=x_10=1\
    else x <= q_0.3 then x_3 = x_4 = \'85=x_10=1\
     \'85\
    else x <= q_0.9 then x_9=x_10=1\
    else x_10=1\
\
\
\
I generate 5 set of (data_train, data_test) (data_train_enc, data_test_enc) for following cases\
	1) p_threshold = 0.5 N_trian = 100, N_test = 10000\
	2) p_threshold = 0.9 N_trian = 100, N_test = 10000\
	\
	\
\
\
\
\
}