library(data.table)
library(Publish)
library(caret)
library(sigmoid)
library(rpart)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/")
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
View(data)
summary(data$t)
data$t <- as.factor(data$t)
summary(data$t)
View(data)
seeds = c(123,156,67,1,43)
training_portion = 0.75
Run = 1
set.seed(seeds[Run])
smp_size <- floor(training_portion * nrow(data))
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
View(data_train)
names(data)
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6","t"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6","t"))]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6"))]
View(t_train_data)
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
predict(model, t_train_data, type = "prob")
0.1140538 + 0.1053175 + 0.2477815 + 0.1201761 + 0.1126092 + 0.3000619
predict(model, t_train_data, type = "prob")
data_train$t
data_train$prop_score_1  <- predict(model, t_train_data, type = "prob")[,data_train$t]
View(data_train)
View(data_train)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
Run = 1
set.seed(seeds[Run])
##########################################################################################################
# Functions
##########################################################################################################
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
## 75% of the sample size
smp_size <- floor(training_portion * nrow(data))
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6"))]
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
x = predict(model, t_train_data, type = "prob")
x
x[,2]
y = data_train$t
x[y]
x
x = x[1:2,]
x
y = y[1:2,]
y
y = y[1:2]
x
y
x[y]
y = as.numeric(y)
y
x
y
x[y]
x[,y]
x
y
x[,2]
predict(model, t_train_data, type = "prob")
x
y
data_train$prop_score_1  <- predict(model, t_train_data, type = "prob")
View(data_train)
x
x <- as.data.frame(x)
x
x[,1]
x[,y]
x[,c(1,0,0,0,0,0)]
x[,c(1,0,0,0,0,0),c(0,0,0,0,0,1)]
x[,c(1,0,0,0,0,0),c(1,0,0,0,0,1)]
t = 1
index <- data_train$t == t
iindex
iindex
index
data_train$prop_score[index]  <- predict(model, t_train_data, type = "prob")[index,t]
View(data_train)
data_train$prop_score <- NA
for(t in levels(data$t)){
index <- data_train$t == t
data_train$prop_score[index]  <- predict(model, t_train_data, type = "prob")[index,t]
}
View(data_train)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
Run = 1
set.seed(seeds[Run])
##########################################################################################################
# Functions
##########################################################################################################
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
## 75% of the sample size
smp_size <- floor(training_portion * nrow(data))
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6"))]
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
data_train$prop_score <- NA
View(data_train)
t=1
index <- data_train$t == t
data_train$prop_score[index]  <- predict(model, t_train_data, type = "prob")[index,t]
View(data_train)
data_train$prop_score <- NA
for(t in levels(data$t)){
index <- data_train$t == t
data_train$prop_score[index]  <- predict(model, t_train_data, type = "prob")[index,t]
}
View(data_train)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
Run = 1
set.seed(seeds[Run])
##########################################################################################################
# Functions
##########################################################################################################
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
## 75% of the sample size
smp_size <- floor(training_portion * nrow(data))
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6"))]
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
data_train$prop_score <- NA
data_test$prop_score <- NA
for(t in levels(data$t)){
index <- data_train$t == t
data_train$prob_t_pred_tree[index]  <- predict(model, t_train_data, type = "prob")[index,t]
index <- data_test$t == t
data_test$prob_t_pred_tree[index]  <- predict(model, t_test_data, type = "prob")[index,t]
}
rm(t_train_data,t_test_data)
View(data_train)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
Run = 1
set.seed(seeds[Run])
##########################################################################################################
# Functions
##########################################################################################################
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
## 75% of the sample size
smp_size <- floor(training_portion * nrow(data))
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6"))]
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
data_train$prob_t_pred_tree <- NA
data_test$prob_t_pred_tree <- NA
for(t in levels(data$t)){
index <- data_train$t == t
data_train$prob_t_pred_tree[index]  <- predict(model, t_train_data, type = "prob")[index,t]
index <- data_test$t == t
data_test$prob_t_pred_tree[index]  <- predict(model, t_test_data, type = "prob")[index,t]
}
rm(t_train_data,t_test_data)
View(data_train)
summary(data_train$t)/nrow(data_train)
par(xpd = TRUE)
plot(model, compress = TRUE)
text(model, use.n = TRUE)
rm(model)
model <- model.cv$finalModel
summary(model)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/data/IST/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
for(Run in c(1,2,3,4,5)){
set.seed(seeds[Run])
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
## 75% of the sample size
smp_size <- floor(training_portion * nrow(data))
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y1","y2","y3","y4","y5","y6"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y1","y2","y3","y4","y5","y6"))]
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
data_train$prob_t_pred_tree <- NA
data_test$prob_t_pred_tree <- NA
for(t in levels(data$t)){
index <- data_train$t == t
data_train$prob_t_pred_tree[index]  <- predict(model, t_train_data, type = "prob")[index,t]
index <- data_test$t == t
data_test$prob_t_pred_tree[index]  <- predict(model, t_test_data, type = "prob")[index,t]
}
rm(t_train_data,t_test_data)
# par(xpd = TRUE)
# plot(model, compress = TRUE)
# text(model, use.n = TRUE)
rm(model,model.cv)
##########################################################################################################
# Save the files
##########################################################################################################
# Save files
write.csv(data_train,paste("data_train_",toString(Run),".csv",sep=''),row.names = FALSE)
write.csv(data_test,paste("data_test_",toString(Run),".csv",sep=''),row.names = FALSE)
}
View(data_train)
summary(data_train$t)/nrow(data_train)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/data/IST/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
View(data)
rm(list=ls())
graphics.off()
setwd("/Users/sina/Documents/GitHub/prescriptive-trees/data/IST/")
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/cleaned_IST.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
View(data)
