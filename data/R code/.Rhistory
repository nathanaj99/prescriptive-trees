library(data.table)
library(Publish)
library(caret)
library(sigmoid)
library(rpart)
rm(list=ls())
graphics.off()
##########################################################################################################
# Parameters
##########################################################################################################
# Choose the seeds
seeds = c(123,156,67,1,43)
training_portion = 0.75
Run=1
##########################################################################################################
# read data
##########################################################################################################
data <- read.csv("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/warfarin_0.85.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data_enc <- read.csv("/Users/sina/Documents/GitHub/prescriptive-trees/Direct_Approach/warfarin_enc_0.85.csv", header = TRUE, sep = ",",na.strings = "",stringsAsFactors = TRUE)
data$t <- as.factor(data$t)
data_enc$t <- as.factor(data_enc$t)
set.seed(seeds[Run])
##########################################################################################################
# Splitting data into training and test
##########################################################################################################
## 75% of the sample size
# smp_size <- floor(training_portion * nrow(data))
smp_size = 2000
## set the seed to make your partition reproducible
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
data_train <- data[train_ind, ]
data_test <- data[-train_ind, ]
data_train_enc <- data_enc[train_ind, ]
data_test_enc <- data_enc[-train_ind, ]
##########################################################################################################
# Learning propensity score P(t|x) for each entry using decision tree
##########################################################################################################
t_train_data = data_train[,!(names(data_train) %in% c("y","y0","y1","y2"))]
t_test_data = data_test[,!(names(data_test) %in% c("y","y0","y1","y2"))]
train_control<- trainControl(method="repeatedcv", number=10, repeats = 3)
model.cv <- train(t ~ .,
data = t_train_data,
method = "rpart",
trControl = train_control)
model <- model.cv$finalModel
data_train_enc$prob_t_pred_tree <- NA
data_test_enc$prob_t_pred_tree <- NA
for(t in levels(data$t)){
index <- data_train$t == t
data_train_enc$prob_t_pred_tree[index]  <- predict(model, t_train_data, type = "prob")[index,t]
data_train$prob_t_pred_tree[index]  <- predict(model, t_train_data, type = "prob")[index,t]
index <- data_test$t == t
data_test_enc$prob_t_pred_tree[index]  <- predict(model, t_test_data, type = "prob")[index,t]
data_test$prob_t_pred_tree[index]  <- predict(model, t_test_data, type = "prob")[index,t]
}
par(xpd = TRUE)
plot(model, compress = TRUE)
text(model, use.n = TRUE)
View(data_train)
